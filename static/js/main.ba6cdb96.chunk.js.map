{"version":3,"sources":["components/Icons/Triangle.js","components/Icons/Hexagon.js","components/Icons/Diamond.js","components/Icons/Pentagon.js","components/Icons/Nonagon.js","components/Icons/Square.js","components/Dice/Dice.js","components/DicePicker/DicePicker.js","App.js","serviceWorker.js","index.js"],"names":["Triangle","props","height","width","viewBox","points","Hexagon","xmlns","version","x","y","Diamond","Pentagon","Nonagon","Square","classNames","require","Dice","aria-label","ariaLabel","diceValue","maxValue","type","className","onClick","children","DicePicker","map","diceSize","key","addDiceCallback","id","uniqueId","App","useState","rolledDice","setRolledDice","total","setTotal","totalMessage","setTotalMessage","rollDice","Math","floor","random","dice","value","concat","newTotal","TransitionGroup","CSSTransition","timeout","removeIndex","indexOf","filter","item","removeDice","aria-live","aria-hidden","newRolledDice","newDice","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kUAYeA,G,MAVE,SAAAC,GAAK,OACpB,yBAAKC,OAAO,OAAOC,MAAM,OAAOC,QAAQ,eACtC,6BAASC,OAAO,8BCWLC,EAbC,SAAAL,GAAK,OACnB,yBAAKM,MAAM,6BAA6BC,QAAQ,MAAMJ,QAAQ,kBAAkBK,EAAE,MAAMC,EAAE,MAAMR,OAAO,OAAOC,MAAM,QAClH,6BAASE,OAAO,gDCSLM,EAXC,SAAAV,GAAK,OACnB,yBAAKC,OAAO,OAAOC,MAAM,OAAOI,MAAM,6BAA6BC,QAAQ,MAAMJ,QAAQ,cAAcK,EAAE,MAAMC,EAAE,OAC/G,6BAASL,OAAO,oCCWLO,EAbE,SAAAX,GAAK,OACpB,yBAAKC,OAAO,OAAOC,MAAM,OAAOI,MAAM,6BACpCC,QAAQ,MAAMC,EAAE,MAAMC,EAAE,MAAMN,QAAQ,aACtC,6BAASC,OAAO,yDCcLQ,EAjBC,SAAAZ,GAAK,OACnB,yBAAKM,MAAM,6BACTC,QAAQ,MAAMC,EAAE,MAAMC,EAAE,MAAMN,QAAQ,YAAYF,OAAO,OAAOC,MAAM,QACtE,6BAASE,OAAO,6FCILS,EAPA,SAAAb,GAAK,OAClB,yBAAKC,OAAO,OAAOC,MAAM,OAAOI,MAAM,6BACpCC,QAAQ,MAAMC,EAAE,MAAMC,EAAE,MAAMN,QAAQ,eACtC,0BAAMK,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKD,OAAO,SCGpCa,EAAaC,EAAQ,IAiCVC,MA/Bf,SAAchB,GAEZ,OACI,4BACEiB,aAAYjB,EAAMkB,UAAYlB,EAAMkB,UAAYlB,EAAMmB,UAAY,iBAAmBnB,EAAMoB,SAAW,qBACtGC,KAAK,SACLC,UAAWR,EAAW,CACpB,MAAQ,EACR,GAAyB,IAAnBd,EAAMoB,SACZ,GAAyB,IAAnBpB,EAAMoB,SACZ,GAAyB,IAAnBpB,EAAMoB,SACZ,IAA0B,KAAnBpB,EAAMoB,SACb,IAA0B,KAAnBpB,EAAMoB,SACb,IAA0B,KAAnBpB,EAAMoB,WAEfG,QAAS,WAAQvB,EAAMuB,YAEH,IAAnBvB,EAAMoB,UAAkB,kBAAC,EAAD,MACL,IAAnBpB,EAAMoB,UAAkB,kBAAC,EAAD,MACL,IAAnBpB,EAAMoB,UAAkB,kBAAC,EAAD,MACL,KAAnBpB,EAAMoB,UAAmB,kBAAC,EAAD,MACN,KAAnBpB,EAAMoB,UAAmB,kBAAC,EAAD,MACN,KAAnBpB,EAAMoB,UAAmB,kBAAC,EAAD,MACzBpB,EAAMwB,SACP,0BAAMF,UAAU,cACbtB,EAAMmB,aCXFM,MAnBf,SAAoBzB,GAClB,OACE,yBAAKsB,UAAU,eACZ,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAAII,KAAI,SAACC,GAC1B,OACE,yBAAKC,IAAKD,EAAUL,UAAU,+BAC5B,kBAAC,EAAD,CACEF,SAAUO,EACVR,UAAWQ,EACXJ,QAAS,WAAQvB,EAAM6B,gBAAgB,CAAET,SAAUO,EAAUG,GAAIC,SACjEb,UAAW,WAAaS,U,gBCoGvBK,MA1Gf,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAENC,EAFM,KAEMC,EAFN,OAGaF,mBAAS,GAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAI2BJ,mBAAS,IAJpC,mBAINK,EAJM,KAIQC,EAJR,KA6Db,SAASC,EAASpB,GAGhB,OAFcqB,KAAKC,MAAMD,KAAKE,SAAWvB,GAAY,EAKvD,OACE,yBAAKE,UAAU,OACb,kBAAC,EAAD,CAAYO,gBA/DhB,SAAoBe,GAElBA,EAAKC,MAAQL,EAASI,EAAKxB,UAE3Be,EAAcD,EAAWY,OAAOF,IAEhC,IAAMG,EAAWX,EAAQQ,EAAKC,MAC9BR,EAASU,GACTR,EAAgB,YAAcK,EAAKC,MAAQ,cAAgBE,EAAW,QAwDlE,kBAACC,EAAA,EAAD,CAAiB1B,UAAU,mBACxBY,EAAWR,KAAI,SAACkB,GAAD,OACd,kBAACK,EAAA,EAAD,CACErB,IAAKgB,EAAKd,GACVoB,QAAS,IACTpC,WAAW,kBAEX,kBAAC,EAAD,CACEM,SAAUwB,EAAKxB,SACfD,UAAWyB,EAAKC,MAChBtB,QAAS,YA9DvB,SAAoBO,GAGlB,IAAIqB,EAAcjB,EAAWR,KAC3B,SAACkB,GAAW,OAAOA,EAAKd,MAAMsB,QAAQtB,GAElCiB,EAAWX,EAAQF,EAAWiB,GAAaN,MAEjDR,EAASU,GACTR,EAAgB,eAAiBL,EAAWiB,GAAa/B,SAAW,kBAAoB2B,GAExFZ,EAAcD,EAAWmB,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,KAAOA,MAmDvByB,CAAWX,EAAKd,KACjCF,IAAKgB,EAAKd,UAMpB,yBAAKR,UAAU,cACb,0BAAMkC,YAAU,SAASlC,UAAU,sBAAsBgB,GACzD,0BAAMmB,cAAY,QAAlB,UAAiCrB,IAEnC,yBAAKd,UAAU,oBACb,4BAAQA,UAAU,gBAAgBC,QA1DxC,WACE,IAAIwB,EAAW,EACXW,EAAgBxB,EAAWR,KAAI,SAACkB,GAClC,IAAMe,EAAU,CACd7B,GAAIc,EAAKd,GACTV,SAAUwB,EAAKxB,SACfyB,MAAOL,EAASI,EAAKxB,WAKvB,OAFA2B,GAAYY,EAAQd,MAEbc,KAGTxB,EAAcuB,GACdrB,EAASU,GACTR,EAAgB,YAAcQ,GAC9BR,EAAgB,MAyCZ,QACA,4BAAQjB,UAAU,yCAAyCC,QAvCjE,WACEY,EAAc,IACdE,EAAS,GACTE,EAAgB,cAChBA,EAAgB,MAmCZ,UAEF,4BAAQjB,UAAU,cAChB,mCAEE,uBAAGmC,cAAY,QAAf,QACA,uBAAGxC,aAAW,kBAAkB2C,KAAK,+BAArC,eChGUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba6cdb96.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Triangle = props => (\n  <svg height=\"100%\" width=\"100%\" viewBox=\"0 0 100 100\">\n    <polygon points=\"\n      0,100 \n      50,0 \n      100,100\n    \" />\n  </svg>\n);\n\nexport default Triangle;\n","import React from \"react\";\n\nconst Hexagon = props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 -4 196 233.75\" x=\"0px\" y=\"0px\" height=\"100%\" width=\"100%\">\n    <polygon points=\"\n      196,57 \n      98,0 \n      0,57\n      0,170\n      98,227\n      196,170\n    \" />\n  </svg>\n);\n\nexport default Hexagon;\n","import React from \"react\";\n\nconst Diamond = props => (\n  <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 100 100\" x=\"0px\" y=\"0px\">\n    <polygon points=\"\n      50,100 \n      85,50 \n      50,0 \n      15,50 \n    \" />\n  </svg>\n);\n\nexport default Diamond;\n","import React from \"react\";\n\nconst Pentagon = props => (\n  <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 31\">\n    <polygon points=\"\n      16,1.8 \n      0.8,12.6 \n      6.6,30.3 \n      25.4,30.3 \n      31.3,12.6\n    \" />\n  </svg>\n);\n\nexport default Pentagon;\n","import React from \"react\";\n\nconst Nonagon = props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" height=\"100%\" width=\"100%\">\n    <polygon points=\"\n      16,0.8 \n      6,4.4 \n      0.8,13.7 \n      2.6,24.3 \n      10.7,31.3 \n      21.3,31.3 \n      29.4,24.3 \n      31.3,13.7\n      26,4.4\n    \" />\n  </svg>\n);\n\nexport default Nonagon;\n","import React from \"react\";\n\nconst Square = props => (\n  <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" >\n    <rect x=\"5\" y=\"5\" width=\"90\" height=\"90\" />\n  </svg>\n);\n\nexport default Square;\n","import React from 'react';\nimport './Dice.css';\nimport Triangle from \"../Icons/Triangle\";\nimport Hexagon from \"../Icons/Hexagon\";\nimport Diamond from \"../Icons/Diamond\";\nimport Pentagon from \"../Icons/Pentagon\";\nimport Nonagon from \"../Icons/Nonagon\";\nimport Square from \"../Icons/Square\";\nvar classNames = require('classnames');\n\nfunction Dice(props) {\n\n  return (\n      <button\n        aria-label={props.ariaLabel ? props.ariaLabel : props.diceValue + \" rolled on a d\" + props.maxValue + \". Click to remove.\"}\n        type=\"button\"\n        className={classNames({\n          'dice': true,\n          'd4': props.maxValue === 4,\n          'd6': props.maxValue === 6,\n          'd8': props.maxValue === 8,\n          'd10': props.maxValue === 10,\n          'd12': props.maxValue === 12,\n          'd20': props.maxValue === 20,\n        })}\n        onClick={() => { props.onClick() }}\n      >\n        {props.maxValue === 4 && <Triangle />}\n        {props.maxValue === 6 && <Square />}\n        {props.maxValue === 8 && <Diamond />}\n        {props.maxValue === 10 && <Pentagon />}\n        {props.maxValue === 12 && <Nonagon />}\n        {props.maxValue === 20 && <Hexagon />}\n        {props.children}\n        <span className='dice-label'>\n          {props.diceValue}\n        </span>\n      </button>\n  );\n}\n\nexport default Dice;","import React from 'react';\nimport './DicePicker.css';\nimport uniqueId from 'lodash/uniqueId';\nimport Dice from \"../Dice/Dice\";\n\nfunction DicePicker(props) {\n  return (\n    <div className=\"dice-picker\">\n      {[4, 6, 8, 10, 12, 20].map((diceSize) => {\n        return (\n          <div key={diceSize} className=\"dice-picker__dice_container\">\n            <Dice\n              maxValue={diceSize}\n              diceValue={diceSize}\n              onClick={() => { props.addDiceCallback({ maxValue: diceSize, id: uniqueId() }) }}\n              ariaLabel={\"Roll a d\" + diceSize}\n            />\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default DicePicker;","import React, { useState } from 'react';\nimport './App.scss';\nimport DicePicker from './components/DicePicker/DicePicker';\nimport Dice from './components/Dice/Dice';\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\n\nfunction App() {\n\n  const [rolledDice, setRolledDice] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [totalMessage, setTotalMessage] = useState(\"\");\n\n  function addNewDice(dice) {\n    // roll it\n    dice.value = rollDice(dice.maxValue);\n    // add it to the state\n    setRolledDice(rolledDice.concat(dice));\n    // update the total\n    const newTotal = total + dice.value;\n    setTotal(newTotal);\n    setTotalMessage(\"Rolled a \" + dice.value + \". Total is \" + newTotal + \".\");\n    // setTimeout(setTotalMessage(\"\"), 5000);\n  }\n\n  function removeDice(id) {\n    // console.log('deleting dice with id: ' + id);\n\n    var removeIndex = rolledDice.map(\n      (dice) => { return dice.id }).indexOf(id);\n\n    const newTotal = total - rolledDice[removeIndex].value;\n\n    setTotal(newTotal);\n    setTotalMessage(\"Removed a d \" + rolledDice[removeIndex].maxValue + \". New total is \" + newTotal);\n\n    setRolledDice(rolledDice.filter(item => item.id !== id));\n\n    // todo put focus on the next item in the tab order\n  }\n\n  function rerollAll() {\n    var newTotal = 0;\n    var newRolledDice = rolledDice.map((dice) => {\n      const newDice = {\n        id: dice.id,\n        maxValue: dice.maxValue,\n        value: rollDice(dice.maxValue)\n      }\n\n      newTotal += newDice.value;\n\n      return newDice;\n    })\n\n    setRolledDice(newRolledDice);\n    setTotal(newTotal);\n    setTotalMessage(\"Total is \" + newTotal);\n    setTotalMessage(\"\");\n  }\n\n  function clear() {\n    setRolledDice([]);\n    setTotal(0);\n    setTotalMessage(\"Total is 0\");\n    setTotalMessage(\"\");\n  }\n\n  function rollDice(maxValue) {\n    const value = Math.floor(Math.random() * maxValue) + 1;\n    // console.log('rolled a ' + value + ' on a d' + maxValue);\n    return value;\n  }\n\n  return (\n    <div className=\"App\">\n      <DicePicker addDiceCallback={addNewDice}></DicePicker>\n        <TransitionGroup className=\"roll-collection\">\n          {rolledDice.map((dice) =>\n            <CSSTransition\n              key={dice.id}\n              timeout={200}\n              classNames=\"dice-animation\"\n            >\n              <Dice\n                maxValue={dice.maxValue}\n                diceValue={dice.value}\n                onClick={() => { removeDice(dice.id) }}\n                key={dice.id}\n              >\n              </Dice>\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n      <div className='roll-total'>\n        <span aria-live=\"polite\" className=\"screen-reader-text\">{totalMessage}</span>\n        <span aria-hidden=\"true\">Total: {total}</span>\n      </div>\n      <div className=\"action-container\">\n        <button className=\"action-button\" onClick={rerollAll}>Roll</button>\n        <button className=\"action-button action-button--secondary\" onClick={clear}>Clear</button>\n      </div>\n      <footer className='siteFooter'>\n        <h3>\n          Dice \n          <p aria-hidden=\"true\"> by </p> \n          <a aria-label=\"Made by Bobwise\" href=\"http://twitter.com/bobwise/\">Bobwise</a>\n        </h3>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}