{"version":3,"sources":["components/Icons/Triangle.js","components/Icons/Hexagon.js","components/Icons/Diamond.js","components/Icons/Pentagon.js","components/Icons/Nonagon.js","components/Icons/Square.js","components/Dice/Dice.js","components/DicePicker/DicePicker.js","App.js","serviceWorker.js","index.js"],"names":["Triangle","props","height","width","viewBox","fill","points","Hexagon","xmlns","version","x","y","Diamond","d","Pentagon","Nonagon","Square","classNames","require","Dice","aria-label","ariaLabel","diceValue","maxValue","className","onClick","children","class","DicePicker","map","diceSize","addDiceCallback","id","uniqueId","App","useState","rolledDice","setRolledDice","total","setTotal","totalMessage","setTotalMessage","rollDice","Math","floor","random","dice","value","concat","newTotal","removeIndex","indexOf","filter","item","removeDice","key","aria-live","aria-hidden","newRolledDice","newDice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c2a6a5c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Triangle = props => (\n  <svg height=\"100%\" width=\"100%\" viewBox=\"0 0 100 100\">\n    <polygon fill=\"#65D0D9\" points=\"0,100 50,0 100,100\" />\n  </svg>\n);\n\nexport default Triangle;\n","import React from \"react\";\n\nconst Hexagon = props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 -4 196 233.75\" x=\"0px\" y=\"0px\" height=\"100%\" width=\"100%\">\n    <g>\n      <polygon fill=\"#5a3128\" points=\"196,57 98,0 0,57 0,170 98,227 196,170 \" />\n    </g>\n  </svg>\n);\n\nexport default Hexagon;\n","import React from \"react\";\n\nconst Diamond = props => (\n  <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 100 100\" x=\"0px\" y=\"0px\">\n    <g>\n      <path d=\"M 50,100 85,50 50,0 15,50 Z\" fill=\"#648452\" />\n    </g>\n  </svg>\n);\n\nexport default Diamond;\n","import React from \"react\";\n\nconst Pentagon = props => (\n  <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 31\">\n    <g>\n      <g>\n        <polygon fill=\"#dcbf5e\" points=\"16,1.8 0.8,12.6 6.6,30.3 25.4,30.3 31.3,12.6   \" />\n      </g>\n      {/* <g>\n        <path d=\"M25.4,31H6.6c-0.3,0-0.6-0.2-0.7-0.5L0,12.9c-0.1-0.3,0-0.7,0.3-0.8L15.6,1.1c0.3-0.2,0.6-0.2,0.9,0L31.7,12    c0.3,0.2,0.4,0.5,0.3,0.8l-5.8,17.6C26,30.8,25.7,31,25.4,31z M7.1,29.5h17.8l5.5-16.6L16,2.7L1.6,12.9L7.1,29.5z\" />\n      </g> */}\n    </g>\n  </svg>\n);\n\nexport default Pentagon;\n","import React from \"react\";\n\nconst Nonagon = props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" height=\"100%\" width=\"100%\">\n    <g>\n      <g>\n        <polygon fill=\"#db7277\" points=\"16,0.8 6,4.4 0.8,13.7 2.6,24.3 10.7,31.3 21.3,31.3 29.4,24.3 31.3,13.7 26,4.4   \" />\n      </g>\n      {/* <g>\n        <path d=\"M21.3,32H10.7c-0.2,0-0.4-0.1-0.5-0.2l-8.1-6.9c-0.1-0.1-0.2-0.3-0.3-0.4L0,13.9c0-0.2,0-0.3,0.1-0.5l5.3-9.3    c0.1-0.2,0.2-0.3,0.4-0.3l10-3.7C15.9,0,16.1,0,16.3,0l10,3.7c0.2,0.1,0.3,0.2,0.4,0.3l5.3,9.3c0.1,0.2,0.1,0.3,0.1,0.5l-1.8,10.6    c0,0.2-0.1,0.3-0.3,0.4l-8.1,6.9C21.6,31.9,21.5,32,21.3,32z M11,30.5h10l7.7-6.6l1.7-10.1l-5-8.8L16,1.5L6.6,5l-5,8.8l1.7,10.1    L11,30.5z\" />\n      </g> */}\n    </g>\n  </svg>\n);\n\nexport default Nonagon;\n","import React from \"react\";\n\nconst Square = props => (\n  <svg height=\"100%\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" >\n  <g>\n    <g>\n      <rect fill=\"#21469f\" x=\"5\" y=\"5\" width=\"90\" height=\"90\"/>\n    </g>\n    {/* <g>\n      <path fill=\"#21469f\" d=\"M30.3,31H1.8C1.3,31,1,30.7,1,30.3V1.8C1,1.3,1.3,1,1.8,1h28.5C30.7,1,31,1.3,31,1.8v28.5C31,30.7,30.7,31,30.3,31z     M2.5,29.5h27v-27h-27V29.5z\"/>\n    </g> */}\n  </g>\n</svg>\n);\n\nexport default Square;\n","import React from 'react';\nimport './Dice.css';\nimport Triangle from \"../Icons/Triangle\";\nimport Hexagon from \"../Icons/Hexagon\";\nimport Diamond from \"../Icons/Diamond\";\nimport Pentagon from \"../Icons/Pentagon\";\nimport Nonagon from \"../Icons/Nonagon\";\nimport Square from \"../Icons/Square\";\nvar classNames = require('classnames');\n\nfunction Dice(props) {\n  return (\n    <button\n      aria-label={props.ariaLabel ? props.ariaLabel : props.diceValue + \" rolled on a d\" + props.maxValue + \". Click to remove.\"}\n      className={classNames({\n        'dice': true,\n        'd4': props.maxValue === 4,\n        'd6': props.maxValue === 6,\n        'd8': props.maxValue === 8,\n        'd10': props.maxValue === 10,\n        'd12': props.maxValue === 12,\n        'd20': props.maxValue === 20,\n      })}\n      onClick={() => {props.onClick()}}\n    >\n      { props.maxValue === 4 && <Triangle/> }\n      { props.maxValue === 6 && <Square/> }\n      { props.maxValue === 8 && <Diamond/> }\n      { props.maxValue === 10 && <Pentagon/> }\n      { props.maxValue === 12 && <Nonagon/> }\n      { props.maxValue === 20 && <Hexagon/> }\n      {props.children}\n      <span class='dice-label'>\n        {props.diceValue}\n      </span>\n    </button>\n  );\n}\n\nexport default Dice;","import React from 'react';\nimport './DicePicker.css';\nimport uniqueId from 'lodash/uniqueId';\nimport Dice from \"../Dice/Dice\";\n\nfunction DicePicker(props) {\n  return (\n    <div className=\"dice-picker\">\n      {[4,6,8,10,12,20].map((diceSize) => {\n        return (\n          <Dice \n            maxValue={diceSize} \n            diceValue={diceSize} \n            onClick={() => { props.addDiceCallback({ maxValue: diceSize, id: uniqueId() }) }} \n            ariaLabel={\"Roll a d\" + diceSize}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default DicePicker;","import React, { useState } from 'react';\nimport './App.scss';\nimport DicePicker from './components/DicePicker/DicePicker';\nimport Dice from './components/Dice/Dice';\nimport Triangle from \"./components/Icons/Triangle\";\n\nfunction App() {\n\n  const [rolledDice, setRolledDice] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [totalMessage, setTotalMessage] = useState(\"\");\n\n  function addNewDice(dice) {\n    // roll it\n    dice.value = rollDice(dice.maxValue);\n    // add it to the state\n    setRolledDice(rolledDice.concat(dice));\n    // update the total\n    const newTotal = total + dice.value;\n    setTotal(newTotal);\n    setTotalMessage(\"Rolled a \" + dice.value + \". New total is \" + newTotal);\n    setTotalMessage(\"\");\n  }\n\n  function removeDice(id) {\n    // console.log('deleting dice with id: ' + id);\n\n    var removeIndex = rolledDice.map(\n      (dice) => { return dice.id }).indexOf(id);\n\n    const newTotal = total - rolledDice[removeIndex].value;\n\n    setTotal(newTotal);\n    setTotalMessage(\"Removed a d \" + rolledDice[removeIndex].maxValue + \". New total is \" + newTotal);\n    setTotalMessage(\"\");\n\n    setRolledDice(rolledDice.filter(item => item.id !== id));\n\n    // todo put focus on the next item in the tab order\n  }\n\n  function rerollAll() {\n    var newTotal = 0;\n    var newRolledDice = rolledDice.map((dice) => {\n      const newDice = {\n        id: dice.id,\n        maxValue: dice.maxValue,\n        value: rollDice(dice.maxValue)\n      }\n\n      newTotal += newDice.value;\n\n      return newDice;\n    })\n\n    setRolledDice(newRolledDice);\n    setTotal(newTotal);\n    setTotalMessage(\"Total is \" + newTotal);\n    setTotalMessage(\"\");\n  }\n\n  function clear() {\n    setRolledDice([]);\n    setTotal(0);\n    setTotalMessage(\"Total is 0\");\n    setTotalMessage(\"\");\n  }\n\n  function rollDice(maxValue) {\n    const value = Math.floor(Math.random() * maxValue) + 1;\n    // console.log('rolled a ' + value + ' on a d' + maxValue);\n    return value;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 aria-label=\"Dice\">di.ce</h1>\n      <DicePicker addDiceCallback={addNewDice}></DicePicker>\n      <div className=\"roll-collection\">\n        {rolledDice.map((dice) =>\n          <Dice\n            maxValue={dice.maxValue}\n            diceValue={dice.value}\n            onClick={() => { removeDice(dice.id) }}\n            key={dice.id}\n          >\n          </Dice>\n        )}\n      </div>\n      <div className='roll-total'>\n        <span id=\"live-total\" aria-live=\"polite\" class=\"screen-reader-text\">{totalMessage}</span>\n        <span aria-hidden=\"true\">Total: {total}</span>\n      </div>\n      <button class=\"action-button\" onClick={rerollAll}>Roll</button>\n      <button class=\"action-button action-button--secondary\" onClick={clear}>Clear</button>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}